REM *** Include File: modules\netClient.dba ***
REM Created: 7/4/2010 10:55:22 AM
REM
REM Included in Project: C:\Program Files\The Game Creators\Dark Basic Professional\Projects\worldofomen\worldofomen.dbpro
REM

netClientSetup:

   NET_SERVER_NAME = dataSharedGetField("netClient", "netServerName", NET_SERVER_NAME_DEFAULT, DATA_CREATE)

   global netClientCurrentChannel as string
   netClientCurrentChannel = dataSharedGetField("netClient", "netClientCurrentChannel", "BROADCAST", DATA_CREATE)

return


function netClientStart()

   mn start 1, 0
   mn Disable Message Boxes

   if NET_SERVER_NAME = NET_SERVER_NAME_DEFAULT
      debugWrite(DEBUGWARN,"Server name not set, attempting search...")
      REM NAME WAS NOT SET, SEARCH AND UPDATE
      i = intval(dataSharedGetField("netClient", "netSearchMode", "1",1))
      select i
         case 0:
            REM DO NOT SEARCH
            debugWrite(DEBUGWARN,"Search mode set to 0, default server name will be used.")
         endcase
         case 1:
            REM SEARCH LAN
            debugWrite(DEBUGINFO,"Search mode set to 1, searching on LAN...")
            i$ = netSharedGetLANIP()
            if i$ = ""
               debugWrite(DEBUGERROR,"NO VALID LAN INTERFACES FOUND.  FORCING QUIT.")
               systemSharedGameModeAdd(SYSTEM_MODE_QUITTING)
            else
               NET_SERVER_NAME = i$
               dataSharedUpdateField("netClient","netServerName",NET_SERVER_NAME)
            endif
         endcase
         case 2:
            REM SEARCH WAN
            debugWrite(DEBUGINFO,"Search mode set to 2, searching on WAN...")
            i$ = netSharedGetWANIP()
            if i$ = ""
               debugWrite(DEBUGERROR,"NO VALID WAN INTERFACES FOUND.  FORCING QUIT.")
               systemSharedGameModeAdd(SYSTEM_MODE_QUITTING)
            else
               NET_SERVER_NAME = i$
               dataSharedUpdateField("netClient","netServerName",NET_SERVER_NAME)
            endif

         endcase
      endselect
   endif


endfunction

function netClientStop()

   mn Finish -1

endfunction

function netClientConnectStart()

   mn Connect 0,NET_SERVER_NAME,NET_SERVER_PORT,NET_SERVER_NAME,NET_SERVER_PORT,NET_TIMEOUT_SECONDS,0

endfunction

function netClientConnectStop()

   mn Stop Connect 0
   if (systemMode && SYSTEM_MODE_NET_TCP)
      debugWrite(DEBUGERROR,"Net Connect timeout or error connecting to server.")
   endif
   systemSharedGameModeRemove(SYSTEM_MODE_NET_TCP)

endfunction

function netClientMaintain()

   if (systemMode && SYSTEM_MODE_NET_TCP) = 0

      REM NOT CONNECTED YET

      pollStatus = mn poll connect(0)
      if pollStatus = 1
         REM SUCCESSFUL
         systemSharedGameModeAdd(SYSTEM_MODE_NET_TCP)
         debugWrite(DEBUGINFO,"Net Connect Successful.  Mode TCP Added.")
         netMaxUDPClients = mn Get Max Clients(0)
         debugWrite(DEBUGINFO,"Net Max UDP Clients set to " + str$(netMaxUDPClients))
         netMaxUDPOperations = mn Get Max Operations(0)
         debugWrite(DEBUGINFO,"Net Max UDP Operations set to " + str$(netMaxUDPOperations))
      endif
   else

      REM CONNECTED

       TcpPackets = mn Recv TCP(0,RecvPacket,0)
       if TcpPackets > 0
         netClientParseTCP()
       endif

   endif

endfunction

function netClientSendChat(myChannel$,message$)

   message$ = keyboardSharedSanitize(message$)

   bytes = NET_HEADER_BYTES
   inc bytes, len(myChannel$)
   inc bytes, len(message$)

   REM CHAT WILL NEED TO BE ENCRYPTED ON
   REM CHANNELS THAT ARE MARKED PRIVATE

   netSharedAddHeader(NETC_CHAT,bytes)
   mn Add string SendPacket, myChannel$, 0, 1
   mn Add String SendPacket, message$, 0, 1
   mn Send TCP 0,SendPacket,0,0,1

endfunction

function netClientSendCommand(cmd$)

   cmd$ = keyboardSharedSanitize(cmd$)

   bytes = NET_HEADER_BYTES
   inc bytes, len(cmd$)

   netSharedAddHeader(NETC_COMMAND,bytes)

   REM COMMAND MESSAGES WILL ALWAYS
   REM BE ENCRYPTED.  THIS WILL BE
   REM DONE VERY SOON.
   mn Add String SendPacket, cmd$, 0, 1

   mn Send TCP 0,SendPacket,0,0,1

endfunction

function netClientChangeChannels(operation as integer, channel$ as string)

   channel$ = keyboardSharedSanitize(channel$)

   bytes = NET_HEADER_BYTES
   inc bytes, len(channel$)

   netSharedAddHeader(operation,bytes)
   mn Add String SendPacket, channel$, 0, 1
   mn Send TCP 0,SendPacket,0,0,1

endfunction

function netClientParseTCP()

    length = mn Get Int(RecvPacket)
    time = mn Get Int(RecvPacket)
    msgID = mn Get Int(RecvPacket)

    REM SKIPPING THE SANITY CHECKS FOR NOW

    select msgID

       case NETS_CHAT
          channel$ = mn Get String(RecvPacket,0,1)
          message$ = mn Get String(RecvPacket,0,1)
          message$ = "[" + channel$ + "] " + message$
          message$ = keyboardSharedSanitize(message$)

          REM TURN ON CHAT WHEN WE RECEIVE A MESSAGE
          REM ON A CHANNEL WE ARE LISTENING TO
          systemSharedGameModeAdd(SYSTEM_MODE_CHAT_ACTIVE)
          keyboardUpdateChatReceive(message$)
          `guiUpdateChatReceive(message$)
          rem not yet
       endcase

    endselect

endfunction
